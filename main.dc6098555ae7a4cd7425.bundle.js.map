{"version":3,"file":"main.dc6098555ae7a4cd7425.bundle.js","sources":["webpack:///./tinymce-angular-component/src/editor/Events.ts"],"sourcesContent":["import { Output, EventEmitter } from '@angular/core';\n\nexport interface EventObj<T> {\n  event: T;\n  editor: any;\n}\n\nexport class Events {\n  @Output() onBeforePaste: EventEmitter<EventObj<ClipboardEvent>> = new EventEmitter();\n  @Output() onBlur: EventEmitter<EventObj<FocusEvent>> = new EventEmitter();\n  @Output() onClick: EventEmitter<EventObj<MouseEvent>> = new EventEmitter();\n  @Output() onContextMenu: EventEmitter<EventObj<MouseEvent>> = new EventEmitter();\n  @Output() onCopy: EventEmitter<EventObj<ClipboardEvent>> = new EventEmitter();\n  @Output() onCut: EventEmitter<EventObj<ClipboardEvent>> = new EventEmitter();\n  @Output() onDblclick: EventEmitter<EventObj<MouseEvent>> = new EventEmitter();\n  @Output() onDrag: EventEmitter<EventObj<DragEvent>> = new EventEmitter();\n  @Output() onDragDrop: EventEmitter<EventObj<DragEvent>> = new EventEmitter();\n  @Output() onDragEnd: EventEmitter<EventObj<DragEvent>> = new EventEmitter();\n  @Output() onDragGesture: EventEmitter<EventObj<DragEvent>> = new EventEmitter();\n  @Output() onDragOver: EventEmitter<EventObj<DragEvent>> = new EventEmitter();\n  @Output() onDrop: EventEmitter<EventObj<DragEvent>> = new EventEmitter();\n  @Output() onFocus: EventEmitter<EventObj<FocusEvent>> = new EventEmitter();\n  @Output() onFocusIn: EventEmitter<EventObj<FocusEvent>> = new EventEmitter();\n  @Output() onFocusOut: EventEmitter<EventObj<FocusEvent>> = new EventEmitter();\n  @Output() onKeyDown: EventEmitter<EventObj<KeyboardEvent>> = new EventEmitter();\n  @Output() onKeyPress: EventEmitter<EventObj<KeyboardEvent>> = new EventEmitter();\n  @Output() onKeyUp: EventEmitter<EventObj<KeyboardEvent>> = new EventEmitter();\n  @Output() onMouseDown: EventEmitter<EventObj<MouseEvent>> = new EventEmitter();\n  @Output() onMouseEnter: EventEmitter<EventObj<MouseEvent>> = new EventEmitter();\n  @Output() onMouseLeave: EventEmitter<EventObj<MouseEvent>> = new EventEmitter();\n  @Output() onMouseMove: EventEmitter<EventObj<MouseEvent>> = new EventEmitter();\n  @Output() onMouseOut: EventEmitter<EventObj<MouseEvent>> = new EventEmitter();\n  @Output() onMouseOver: EventEmitter<EventObj<MouseEvent>> = new EventEmitter();\n  @Output() onMouseUp: EventEmitter<EventObj<MouseEvent>> = new EventEmitter();\n  @Output() onPaste: EventEmitter<EventObj<ClipboardEvent>> = new EventEmitter();\n  @Output() onSelectionChange: EventEmitter<EventObj<Event>> = new EventEmitter();\n  @Output() onActivate: EventEmitter<EventObj<any>> = new EventEmitter();\n  @Output() onAddUndo: EventEmitter<EventObj<any>> = new EventEmitter();\n  @Output() onBeforeAddUndo: EventEmitter<EventObj<any>> = new EventEmitter();\n  @Output() onBeforeExecCommand: EventEmitter<EventObj<any>> = new EventEmitter();\n  @Output() onBeforeGetContent: EventEmitter<EventObj<any>> = new EventEmitter();\n  @Output() onBeforeRenderUI: EventEmitter<EventObj<any>> = new EventEmitter();\n  @Output() onBeforeSetContent: EventEmitter<EventObj<any>> = new EventEmitter();\n  @Output() onChange: EventEmitter<EventObj<any>> = new EventEmitter();\n  @Output() onClearUndos: EventEmitter<EventObj<any>> = new EventEmitter();\n  @Output() onDeactivate: EventEmitter<EventObj<any>> = new EventEmitter();\n  @Output() onDirty: EventEmitter<EventObj<any>> = new EventEmitter();\n  @Output() onExecCommand: EventEmitter<EventObj<any>> = new EventEmitter();\n  @Output() onGetContent: EventEmitter<EventObj<any>> = new EventEmitter();\n  @Output() onHide: EventEmitter<EventObj<any>> = new EventEmitter();\n  @Output() onInit: EventEmitter<EventObj<any>> = new EventEmitter();\n  @Output() onLoadContent: EventEmitter<EventObj<any>> = new EventEmitter();\n  @Output() onNodeChange: EventEmitter<EventObj<any>> = new EventEmitter();\n  @Output() onPostProcess: EventEmitter<EventObj<any>> = new EventEmitter();\n  @Output() onPostRender: EventEmitter<EventObj<any>> = new EventEmitter();\n  @Output() onPreInit: EventEmitter<EventObj<any>> = new EventEmitter();\n  @Output() onPreProcess: EventEmitter<EventObj<any>> = new EventEmitter();\n  @Output() onProgressState: EventEmitter<EventObj<any>> = new EventEmitter();\n  @Output() onRedo: EventEmitter<EventObj<any>> = new EventEmitter();\n  @Output() onRemove: EventEmitter<EventObj<any>> = new EventEmitter();\n  @Output() onReset: EventEmitter<EventObj<any>> = new EventEmitter();\n  @Output() onSaveContent: EventEmitter<EventObj<any>> = new EventEmitter();\n  @Output() onSetAttrib: EventEmitter<EventObj<any>> = new EventEmitter();\n  @Output() onObjectResizeStart: EventEmitter<EventObj<any>> = new EventEmitter();\n  @Output() onObjectResized: EventEmitter<EventObj<any>> = new EventEmitter();\n  @Output() onObjectSelected: EventEmitter<EventObj<any>> = new EventEmitter();\n  @Output() onSetContent: EventEmitter<EventObj<any>> = new EventEmitter();\n  @Output() onShow: EventEmitter<EventObj<any>> = new EventEmitter();\n  @Output() onSubmit: EventEmitter<EventObj<any>> = new EventEmitter();\n  @Output() onUndo: EventEmitter<EventObj<any>> = new EventEmitter();\n  @Output() onVisualAid: EventEmitter<EventObj<any>> = new EventEmitter();\n}\n\nexport const validEvents: (keyof Events)[] = [\n  'onActivate',\n  'onAddUndo',\n  'onBeforeAddUndo',\n  'onBeforeExecCommand',\n  'onBeforeGetContent',\n  'onBeforeRenderUI',\n  'onBeforeSetContent',\n  'onBeforePaste',\n  'onBlur',\n  'onChange',\n  'onClearUndos',\n  'onClick',\n  'onContextMenu',\n  'onCopy',\n  'onCut',\n  'onDblclick',\n  'onDeactivate',\n  'onDirty',\n  'onDrag',\n  'onDragDrop',\n  'onDragEnd',\n  'onDragGesture',\n  'onDragOver',\n  'onDrop',\n  'onExecCommand',\n  'onFocus',\n  'onFocusIn',\n  'onFocusOut',\n  'onGetContent',\n  'onHide',\n  'onInit',\n  'onKeyDown',\n  'onKeyPress',\n  'onKeyUp',\n  'onLoadContent',\n  'onMouseDown',\n  'onMouseEnter',\n  'onMouseLeave',\n  'onMouseMove',\n  'onMouseOut',\n  'onMouseOver',\n  'onMouseUp',\n  'onNodeChange',\n  'onObjectResizeStart',\n  'onObjectResized',\n  'onObjectSelected',\n  'onPaste',\n  'onPostProcess',\n  'onPostRender',\n  'onPreProcess',\n  'onProgressState',\n  'onRedo',\n  'onRemove',\n  'onReset',\n  'onSaveContent',\n  'onSelectionChange',\n  'onSetAttrib',\n  'onSetContent',\n  'onShow',\n  'onSubmit',\n  'onUndo',\n  'onVisualAid'\n];\n"],"mappings":"AAOA","sourceRoot":""}